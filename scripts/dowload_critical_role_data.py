# FYI !!!!!!
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# You need ~60G of disk space available for this
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# FYI !!!!!!
# Downloads 4 videos + captions from campaigns 1+2 and 3 from campaign 3

from argparse import ArgumentParser

from vctube import VCtube


def main(
        ffmpeg_path: str = None
):
    campaign_one_output_dir = 'CR_captions_1'
    campaign_one_playlist = 'https://www.youtube.com/playlist?list=PLl0qy1voN1Sy1WFxtdYbEvDO_DgElPMXz'
    campaign_one_dl = VCtube(output_dir=campaign_one_output_dir, youtube_url=campaign_one_playlist, lang='en',
                             ffmpeg_path=ffmpeg_path)

    campaign_two_output_dir = 'CR_captions_2'
    campaign_two_playlist = 'https://www.youtube.com/playlist?list=PLl0qy1voN1SxZ4zvxtUFJTzTEcm_yJlqY'
    campaign_two_dl = VCtube(output_dir=campaign_two_output_dir, youtube_url=campaign_two_playlist, lang='en',
                             ffmpeg_path=ffmpeg_path)

    campaign_three_output_dir = 'CR_captions_3'
    campaign_three_playlist = 'https://www.youtube.com/playlist?list=PLl0qy1voN1Sz0mx_rwZkl7YmnnWyX8BSm'
    campaign_three_dl = VCtube(output_dir=campaign_three_output_dir, youtube_url=campaign_three_playlist, lang='en',
                               ffmpeg_path=ffmpeg_path)

    print('Creating campaign one data...')
    campaign_one_dl.download_audio()
    campaign_one_dl.download_captions(skip_autogenerated=True)
    campaign_one_dl.audio_split(parallel=True)
    input('Check the data size then press enter...')

    print('Creating campaign two data...')
    campaign_two_dl.download_audio()
    campaign_two_dl.download_captions(skip_autogenerated=True)
    campaign_two_dl.audio_split(parallel=True)
    input('Check the data size then press enter...')

    print('Creating campaign three data...')
    campaign_three_dl.download_audio()
    campaign_three_dl.download_captions(skip_autogenerated=True)
    campaign_three_dl.audio_split(parallel=True)

    # More processing to get just the speaker labels


if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('--ffmpeg-path', type=str, help='Path to the ffmpeg binary you wish to use', required=False,
                        default='> which ffmpeg')
    args = parser.parse_args()
    main(**vars(args))
